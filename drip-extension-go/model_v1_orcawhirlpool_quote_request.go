/*
Drip Cloud Functions

Drip auxilary backend.

API version: 1.0.0
Contact: team@dcaf.so
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dripextension

import (
	"encoding/json"
)

// V1OrcawhirlpoolQuoteRequest struct for V1OrcawhirlpoolQuoteRequest
type V1OrcawhirlpoolQuoteRequest struct {
	ConnectionUrl string `json:"connectionUrl"`
	Whirlpool string `json:"whirlpool"`
	InputTokenMint string `json:"inputTokenMint"`
	InputAmount string `json:"inputAmount"`
}

// NewV1OrcawhirlpoolQuoteRequest instantiates a new V1OrcawhirlpoolQuoteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1OrcawhirlpoolQuoteRequest(connectionUrl string, whirlpool string, inputTokenMint string, inputAmount string) *V1OrcawhirlpoolQuoteRequest {
	this := V1OrcawhirlpoolQuoteRequest{}
	this.ConnectionUrl = connectionUrl
	this.Whirlpool = whirlpool
	this.InputTokenMint = inputTokenMint
	this.InputAmount = inputAmount
	return &this
}

// NewV1OrcawhirlpoolQuoteRequestWithDefaults instantiates a new V1OrcawhirlpoolQuoteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1OrcawhirlpoolQuoteRequestWithDefaults() *V1OrcawhirlpoolQuoteRequest {
	this := V1OrcawhirlpoolQuoteRequest{}
	return &this
}

// GetConnectionUrl returns the ConnectionUrl field value
func (o *V1OrcawhirlpoolQuoteRequest) GetConnectionUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionUrl
}

// GetConnectionUrlOk returns a tuple with the ConnectionUrl field value
// and a boolean to check if the value has been set.
func (o *V1OrcawhirlpoolQuoteRequest) GetConnectionUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionUrl, true
}

// SetConnectionUrl sets field value
func (o *V1OrcawhirlpoolQuoteRequest) SetConnectionUrl(v string) {
	o.ConnectionUrl = v
}

// GetWhirlpool returns the Whirlpool field value
func (o *V1OrcawhirlpoolQuoteRequest) GetWhirlpool() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Whirlpool
}

// GetWhirlpoolOk returns a tuple with the Whirlpool field value
// and a boolean to check if the value has been set.
func (o *V1OrcawhirlpoolQuoteRequest) GetWhirlpoolOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Whirlpool, true
}

// SetWhirlpool sets field value
func (o *V1OrcawhirlpoolQuoteRequest) SetWhirlpool(v string) {
	o.Whirlpool = v
}

// GetInputTokenMint returns the InputTokenMint field value
func (o *V1OrcawhirlpoolQuoteRequest) GetInputTokenMint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputTokenMint
}

// GetInputTokenMintOk returns a tuple with the InputTokenMint field value
// and a boolean to check if the value has been set.
func (o *V1OrcawhirlpoolQuoteRequest) GetInputTokenMintOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.InputTokenMint, true
}

// SetInputTokenMint sets field value
func (o *V1OrcawhirlpoolQuoteRequest) SetInputTokenMint(v string) {
	o.InputTokenMint = v
}

// GetInputAmount returns the InputAmount field value
func (o *V1OrcawhirlpoolQuoteRequest) GetInputAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputAmount
}

// GetInputAmountOk returns a tuple with the InputAmount field value
// and a boolean to check if the value has been set.
func (o *V1OrcawhirlpoolQuoteRequest) GetInputAmountOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.InputAmount, true
}

// SetInputAmount sets field value
func (o *V1OrcawhirlpoolQuoteRequest) SetInputAmount(v string) {
	o.InputAmount = v
}

func (o V1OrcawhirlpoolQuoteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connectionUrl"] = o.ConnectionUrl
	}
	if true {
		toSerialize["whirlpool"] = o.Whirlpool
	}
	if true {
		toSerialize["inputTokenMint"] = o.InputTokenMint
	}
	if true {
		toSerialize["inputAmount"] = o.InputAmount
	}
	return json.Marshal(toSerialize)
}

type NullableV1OrcawhirlpoolQuoteRequest struct {
	value *V1OrcawhirlpoolQuoteRequest
	isSet bool
}

func (v NullableV1OrcawhirlpoolQuoteRequest) Get() *V1OrcawhirlpoolQuoteRequest {
	return v.value
}

func (v *NullableV1OrcawhirlpoolQuoteRequest) Set(val *V1OrcawhirlpoolQuoteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1OrcawhirlpoolQuoteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1OrcawhirlpoolQuoteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1OrcawhirlpoolQuoteRequest(val *V1OrcawhirlpoolQuoteRequest) *NullableV1OrcawhirlpoolQuoteRequest {
	return &NullableV1OrcawhirlpoolQuoteRequest{value: val, isSet: true}
}

func (v NullableV1OrcawhirlpoolQuoteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1OrcawhirlpoolQuoteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


