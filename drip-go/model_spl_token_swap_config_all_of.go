/*
Drip Backend

Drip backend service. All API's have a IP rate limit of 10 requests per second. 

API version: 1.0.0
Contact: mocha@dcaf.so
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package drip

import (
	"encoding/json"
)

// SplTokenSwapConfigAllOf struct for SplTokenSwapConfigAllOf
type SplTokenSwapConfigAllOf struct {
	SwapTokenMint string `json:"swapTokenMint"`
	SwapTokenAAccount string `json:"swapTokenAAccount"`
	SwapTokenBAccount string `json:"swapTokenBAccount"`
	SwapFeeAccount string `json:"swapFeeAccount"`
	SwapAuthority string `json:"swapAuthority"`
	Swap string `json:"swap"`
}

// NewSplTokenSwapConfigAllOf instantiates a new SplTokenSwapConfigAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplTokenSwapConfigAllOf(swapTokenMint string, swapTokenAAccount string, swapTokenBAccount string, swapFeeAccount string, swapAuthority string, swap string) *SplTokenSwapConfigAllOf {
	this := SplTokenSwapConfigAllOf{}
	this.SwapTokenMint = swapTokenMint
	this.SwapTokenAAccount = swapTokenAAccount
	this.SwapTokenBAccount = swapTokenBAccount
	this.SwapFeeAccount = swapFeeAccount
	this.SwapAuthority = swapAuthority
	this.Swap = swap
	return &this
}

// NewSplTokenSwapConfigAllOfWithDefaults instantiates a new SplTokenSwapConfigAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplTokenSwapConfigAllOfWithDefaults() *SplTokenSwapConfigAllOf {
	this := SplTokenSwapConfigAllOf{}
	return &this
}

// GetSwapTokenMint returns the SwapTokenMint field value
func (o *SplTokenSwapConfigAllOf) GetSwapTokenMint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapTokenMint
}

// GetSwapTokenMintOk returns a tuple with the SwapTokenMint field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfigAllOf) GetSwapTokenMintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapTokenMint, true
}

// SetSwapTokenMint sets field value
func (o *SplTokenSwapConfigAllOf) SetSwapTokenMint(v string) {
	o.SwapTokenMint = v
}

// GetSwapTokenAAccount returns the SwapTokenAAccount field value
func (o *SplTokenSwapConfigAllOf) GetSwapTokenAAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapTokenAAccount
}

// GetSwapTokenAAccountOk returns a tuple with the SwapTokenAAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfigAllOf) GetSwapTokenAAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapTokenAAccount, true
}

// SetSwapTokenAAccount sets field value
func (o *SplTokenSwapConfigAllOf) SetSwapTokenAAccount(v string) {
	o.SwapTokenAAccount = v
}

// GetSwapTokenBAccount returns the SwapTokenBAccount field value
func (o *SplTokenSwapConfigAllOf) GetSwapTokenBAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapTokenBAccount
}

// GetSwapTokenBAccountOk returns a tuple with the SwapTokenBAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfigAllOf) GetSwapTokenBAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapTokenBAccount, true
}

// SetSwapTokenBAccount sets field value
func (o *SplTokenSwapConfigAllOf) SetSwapTokenBAccount(v string) {
	o.SwapTokenBAccount = v
}

// GetSwapFeeAccount returns the SwapFeeAccount field value
func (o *SplTokenSwapConfigAllOf) GetSwapFeeAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapFeeAccount
}

// GetSwapFeeAccountOk returns a tuple with the SwapFeeAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfigAllOf) GetSwapFeeAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapFeeAccount, true
}

// SetSwapFeeAccount sets field value
func (o *SplTokenSwapConfigAllOf) SetSwapFeeAccount(v string) {
	o.SwapFeeAccount = v
}

// GetSwapAuthority returns the SwapAuthority field value
func (o *SplTokenSwapConfigAllOf) GetSwapAuthority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapAuthority
}

// GetSwapAuthorityOk returns a tuple with the SwapAuthority field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfigAllOf) GetSwapAuthorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapAuthority, true
}

// SetSwapAuthority sets field value
func (o *SplTokenSwapConfigAllOf) SetSwapAuthority(v string) {
	o.SwapAuthority = v
}

// GetSwap returns the Swap field value
func (o *SplTokenSwapConfigAllOf) GetSwap() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Swap
}

// GetSwapOk returns a tuple with the Swap field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfigAllOf) GetSwapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Swap, true
}

// SetSwap sets field value
func (o *SplTokenSwapConfigAllOf) SetSwap(v string) {
	o.Swap = v
}

func (o SplTokenSwapConfigAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["swapTokenMint"] = o.SwapTokenMint
	}
	if true {
		toSerialize["swapTokenAAccount"] = o.SwapTokenAAccount
	}
	if true {
		toSerialize["swapTokenBAccount"] = o.SwapTokenBAccount
	}
	if true {
		toSerialize["swapFeeAccount"] = o.SwapFeeAccount
	}
	if true {
		toSerialize["swapAuthority"] = o.SwapAuthority
	}
	if true {
		toSerialize["swap"] = o.Swap
	}
	return json.Marshal(toSerialize)
}

type NullableSplTokenSwapConfigAllOf struct {
	value *SplTokenSwapConfigAllOf
	isSet bool
}

func (v NullableSplTokenSwapConfigAllOf) Get() *SplTokenSwapConfigAllOf {
	return v.value
}

func (v *NullableSplTokenSwapConfigAllOf) Set(val *SplTokenSwapConfigAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSplTokenSwapConfigAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSplTokenSwapConfigAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplTokenSwapConfigAllOf(val *SplTokenSwapConfigAllOf) *NullableSplTokenSwapConfigAllOf {
	return &NullableSplTokenSwapConfigAllOf{value: val, isSet: true}
}

func (v NullableSplTokenSwapConfigAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplTokenSwapConfigAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


