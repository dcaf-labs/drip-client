/* tslint:disable */
/* eslint-disable */
/**
 * Drip Backend
 * Drip backend service. All API\'s have a IP rate limit of 10 requests per second. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mocha@dcaf.so
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrcaWhirlpoolConfigAllOf
 */
export interface OrcaWhirlpoolConfigAllOf {
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfigAllOf
     */
    whirlpool: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfigAllOf
     */
    tokenVaultA: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfigAllOf
     */
    tokenVaultB: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfigAllOf
     */
    oracle: string;
}

/**
 * Check if a given object implements the OrcaWhirlpoolConfigAllOf interface.
 */
export function instanceOfOrcaWhirlpoolConfigAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "whirlpool" in value;
    isInstance = isInstance && "tokenVaultA" in value;
    isInstance = isInstance && "tokenVaultB" in value;
    isInstance = isInstance && "oracle" in value;

    return isInstance;
}

export function OrcaWhirlpoolConfigAllOfFromJSON(json: any): OrcaWhirlpoolConfigAllOf {
    return OrcaWhirlpoolConfigAllOfFromJSONTyped(json, false);
}

export function OrcaWhirlpoolConfigAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrcaWhirlpoolConfigAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'whirlpool': json['whirlpool'],
        'tokenVaultA': json['tokenVaultA'],
        'tokenVaultB': json['tokenVaultB'],
        'oracle': json['oracle'],
    };
}

export function OrcaWhirlpoolConfigAllOfToJSON(value?: OrcaWhirlpoolConfigAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'whirlpool': value.whirlpool,
        'tokenVaultA': value.tokenVaultA,
        'tokenVaultB': value.tokenVaultB,
        'oracle': value.oracle,
    };
}

