/* tslint:disable */
/* eslint-disable */
/**
 * Drip Backend
 * Drip backend service. All API\'s have a IP rate limit of 10 requests per second. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mocha@dcaf.so
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProtoConfig,
    ProtoConfigFromJSON,
    ProtoConfigFromJSONTyped,
    ProtoConfigToJSON,
} from './ProtoConfig';
import {
    Token,
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
} from './Token';
import {
    TokenAccountBalance,
    TokenAccountBalanceFromJSON,
    TokenAccountBalanceFromJSONTyped,
    TokenAccountBalanceToJSON,
} from './TokenAccountBalance';

/**
 * 
 * @export
 * @interface ExpandedAdminVaultAllOf
 */
export interface ExpandedAdminVaultAllOf {
    /**
     * 
     * @type {ProtoConfig}
     * @memberof ExpandedAdminVaultAllOf
     */
    protoConfigValue?: ProtoConfig;
    /**
     * 
     * @type {Token}
     * @memberof ExpandedAdminVaultAllOf
     */
    tokenAMintValue?: Token;
    /**
     * 
     * @type {Token}
     * @memberof ExpandedAdminVaultAllOf
     */
    tokenBMintValue?: Token;
    /**
     * 
     * @type {TokenAccountBalance}
     * @memberof ExpandedAdminVaultAllOf
     */
    tokenAAccountValue?: TokenAccountBalance;
    /**
     * 
     * @type {TokenAccountBalance}
     * @memberof ExpandedAdminVaultAllOf
     */
    tokenBAccountValue?: TokenAccountBalance;
    /**
     * 
     * @type {TokenAccountBalance}
     * @memberof ExpandedAdminVaultAllOf
     */
    treasuryTokenBAccountValue?: TokenAccountBalance;
}

export function ExpandedAdminVaultAllOfFromJSON(json: any): ExpandedAdminVaultAllOf {
    return ExpandedAdminVaultAllOfFromJSONTyped(json, false);
}

export function ExpandedAdminVaultAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpandedAdminVaultAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'protoConfigValue': !exists(json, 'protoConfigValue') ? undefined : ProtoConfigFromJSON(json['protoConfigValue']),
        'tokenAMintValue': !exists(json, 'tokenAMintValue') ? undefined : TokenFromJSON(json['tokenAMintValue']),
        'tokenBMintValue': !exists(json, 'tokenBMintValue') ? undefined : TokenFromJSON(json['tokenBMintValue']),
        'tokenAAccountValue': !exists(json, 'tokenAAccountValue') ? undefined : TokenAccountBalanceFromJSON(json['tokenAAccountValue']),
        'tokenBAccountValue': !exists(json, 'tokenBAccountValue') ? undefined : TokenAccountBalanceFromJSON(json['tokenBAccountValue']),
        'treasuryTokenBAccountValue': !exists(json, 'treasuryTokenBAccountValue') ? undefined : TokenAccountBalanceFromJSON(json['treasuryTokenBAccountValue']),
    };
}

export function ExpandedAdminVaultAllOfToJSON(value?: ExpandedAdminVaultAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'protoConfigValue': ProtoConfigToJSON(value.protoConfigValue),
        'tokenAMintValue': TokenToJSON(value.tokenAMintValue),
        'tokenBMintValue': TokenToJSON(value.tokenBMintValue),
        'tokenAAccountValue': TokenAccountBalanceToJSON(value.tokenAAccountValue),
        'tokenBAccountValue': TokenAccountBalanceToJSON(value.tokenBAccountValue),
        'treasuryTokenBAccountValue': TokenAccountBalanceToJSON(value.treasuryTokenBAccountValue),
    };
}

