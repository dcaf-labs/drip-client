/* tslint:disable */
/* eslint-disable */
/**
 * Drip Backend
 * Drip backend service. All API\'s have a IP rate limit of 10 requests per second. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mocha@dcaf.so
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExpandedAdminVaultAllOf,
    ExpandedAdminVaultAllOfFromJSON,
    ExpandedAdminVaultAllOfFromJSONTyped,
    ExpandedAdminVaultAllOfToJSON,
} from './ExpandedAdminVaultAllOf';
import {
    ProtoConfig,
    ProtoConfigFromJSON,
    ProtoConfigFromJSONTyped,
    ProtoConfigToJSON,
} from './ProtoConfig';
import {
    Token,
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
} from './Token';
import {
    TokenAccount,
    TokenAccountFromJSON,
    TokenAccountFromJSONTyped,
    TokenAccountToJSON,
} from './TokenAccount';
import {
    Vault,
    VaultFromJSON,
    VaultFromJSONTyped,
    VaultToJSON,
} from './Vault';

/**
 * Internal vault schema.
 * @export
 * @interface ExpandedAdminVault
 */
export interface ExpandedAdminVault {
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    pubkey: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    protoConfig: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    tokenAAccount: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    tokenBAccount: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    treasuryTokenBAccount: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    tokenAMint: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    tokenBMint: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    lastDcaPeriod: string;
    /**
     * 
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    dripAmount: string;
    /**
     * unix timestamp
     * @type {string}
     * @memberof ExpandedAdminVault
     */
    dcaActivationTimestamp: string;
    /**
     * 
     * @type {boolean}
     * @memberof ExpandedAdminVault
     */
    enabled: boolean;
    /**
     * 
     * @type {number}
     * @memberof ExpandedAdminVault
     */
    maxSlippageBps: number;
    /**
     * 
     * @type {ProtoConfig}
     * @memberof ExpandedAdminVault
     */
    protoConfigValue?: ProtoConfig;
    /**
     * 
     * @type {Token}
     * @memberof ExpandedAdminVault
     */
    tokenAMintValue?: Token;
    /**
     * 
     * @type {Token}
     * @memberof ExpandedAdminVault
     */
    tokenBMintValue?: Token;
    /**
     * 
     * @type {TokenAccount}
     * @memberof ExpandedAdminVault
     */
    tokenAAccountValue?: TokenAccount;
    /**
     * 
     * @type {TokenAccount}
     * @memberof ExpandedAdminVault
     */
    tokenBAccountValue?: TokenAccount;
    /**
     * 
     * @type {TokenAccount}
     * @memberof ExpandedAdminVault
     */
    treasuryTokenBAccountValue?: TokenAccount;
}

export function ExpandedAdminVaultFromJSON(json: any): ExpandedAdminVault {
    return ExpandedAdminVaultFromJSONTyped(json, false);
}

export function ExpandedAdminVaultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpandedAdminVault {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pubkey': json['pubkey'],
        'protoConfig': json['protoConfig'],
        'tokenAAccount': json['tokenAAccount'],
        'tokenBAccount': json['tokenBAccount'],
        'treasuryTokenBAccount': json['treasuryTokenBAccount'],
        'tokenAMint': json['tokenAMint'],
        'tokenBMint': json['tokenBMint'],
        'lastDcaPeriod': json['lastDcaPeriod'],
        'dripAmount': json['dripAmount'],
        'dcaActivationTimestamp': json['dcaActivationTimestamp'],
        'enabled': json['enabled'],
        'maxSlippageBps': json['maxSlippageBps'],
        'protoConfigValue': !exists(json, 'protoConfigValue') ? undefined : ProtoConfigFromJSON(json['protoConfigValue']),
        'tokenAMintValue': !exists(json, 'tokenAMintValue') ? undefined : TokenFromJSON(json['tokenAMintValue']),
        'tokenBMintValue': !exists(json, 'tokenBMintValue') ? undefined : TokenFromJSON(json['tokenBMintValue']),
        'tokenAAccountValue': !exists(json, 'tokenAAccountValue') ? undefined : TokenAccountFromJSON(json['tokenAAccountValue']),
        'tokenBAccountValue': !exists(json, 'tokenBAccountValue') ? undefined : TokenAccountFromJSON(json['tokenBAccountValue']),
        'treasuryTokenBAccountValue': !exists(json, 'treasuryTokenBAccountValue') ? undefined : TokenAccountFromJSON(json['treasuryTokenBAccountValue']),
    };
}

export function ExpandedAdminVaultToJSON(value?: ExpandedAdminVault | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pubkey': value.pubkey,
        'protoConfig': value.protoConfig,
        'tokenAAccount': value.tokenAAccount,
        'tokenBAccount': value.tokenBAccount,
        'treasuryTokenBAccount': value.treasuryTokenBAccount,
        'tokenAMint': value.tokenAMint,
        'tokenBMint': value.tokenBMint,
        'lastDcaPeriod': value.lastDcaPeriod,
        'dripAmount': value.dripAmount,
        'dcaActivationTimestamp': value.dcaActivationTimestamp,
        'enabled': value.enabled,
        'maxSlippageBps': value.maxSlippageBps,
        'protoConfigValue': ProtoConfigToJSON(value.protoConfigValue),
        'tokenAMintValue': TokenToJSON(value.tokenAMintValue),
        'tokenBMintValue': TokenToJSON(value.tokenBMintValue),
        'tokenAAccountValue': TokenAccountToJSON(value.tokenAAccountValue),
        'tokenBAccountValue': TokenAccountToJSON(value.tokenBAccountValue),
        'treasuryTokenBAccountValue': TokenAccountToJSON(value.treasuryTokenBAccountValue),
    };
}

