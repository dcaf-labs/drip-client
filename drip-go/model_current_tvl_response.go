/*
Drip Backend

Drip backend service. All API's have a IP rate limit of 10 requests per second. 

API version: 1.0.0
Contact: mocha@dcaf.so
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package drip

import (
	"encoding/json"
)

// CurrentTVLResponse struct for CurrentTVLResponse
type CurrentTVLResponse struct {
	// A float 64 string for the current tvl in USD.
	TotalUsdValue string `json:"totalUsdValue"`
}

// NewCurrentTVLResponse instantiates a new CurrentTVLResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrentTVLResponse(totalUsdValue string) *CurrentTVLResponse {
	this := CurrentTVLResponse{}
	this.TotalUsdValue = totalUsdValue
	return &this
}

// NewCurrentTVLResponseWithDefaults instantiates a new CurrentTVLResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrentTVLResponseWithDefaults() *CurrentTVLResponse {
	this := CurrentTVLResponse{}
	return &this
}

// GetTotalUsdValue returns the TotalUsdValue field value
func (o *CurrentTVLResponse) GetTotalUsdValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalUsdValue
}

// GetTotalUsdValueOk returns a tuple with the TotalUsdValue field value
// and a boolean to check if the value has been set.
func (o *CurrentTVLResponse) GetTotalUsdValueOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TotalUsdValue, true
}

// SetTotalUsdValue sets field value
func (o *CurrentTVLResponse) SetTotalUsdValue(v string) {
	o.TotalUsdValue = v
}

func (o CurrentTVLResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalUsdValue"] = o.TotalUsdValue
	}
	return json.Marshal(toSerialize)
}

type NullableCurrentTVLResponse struct {
	value *CurrentTVLResponse
	isSet bool
}

func (v NullableCurrentTVLResponse) Get() *CurrentTVLResponse {
	return v.value
}

func (v *NullableCurrentTVLResponse) Set(val *CurrentTVLResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrentTVLResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrentTVLResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrentTVLResponse(val *CurrentTVLResponse) *NullableCurrentTVLResponse {
	return &NullableCurrentTVLResponse{value: val, isSet: true}
}

func (v NullableCurrentTVLResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrentTVLResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


