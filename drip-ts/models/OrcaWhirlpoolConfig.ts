/* tslint:disable */
/* eslint-disable */
/**
 * Drip Backend
 * Drip backend service. All API\'s have a IP rate limit of 10 requests per second. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mocha@dcaf.so
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DripCommon,
    DripCommonFromJSON,
    DripCommonFromJSONTyped,
    DripCommonToJSON,
} from './DripCommon';
import {
    OrcaWhirlpoolConfigAllOf,
    OrcaWhirlpoolConfigAllOfFromJSON,
    OrcaWhirlpoolConfigAllOfFromJSONTyped,
    OrcaWhirlpoolConfigAllOfToJSON,
} from './OrcaWhirlpoolConfigAllOf';

/**
 * 
 * @export
 * @interface OrcaWhirlpoolConfig
 */
export interface OrcaWhirlpoolConfig {
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    vault: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    vaultProtoConfig: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    vaultTokenAAccount: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    vaultTokenBAccount: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    tokenAMint: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    tokenBMint: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    whirlpool: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    tokenVaultA: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    tokenVaultB: string;
    /**
     * 
     * @type {string}
     * @memberof OrcaWhirlpoolConfig
     */
    oracle: string;
}

export function OrcaWhirlpoolConfigFromJSON(json: any): OrcaWhirlpoolConfig {
    return OrcaWhirlpoolConfigFromJSONTyped(json, false);
}

export function OrcaWhirlpoolConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrcaWhirlpoolConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vault': json['vault'],
        'vaultProtoConfig': json['vaultProtoConfig'],
        'vaultTokenAAccount': json['vaultTokenAAccount'],
        'vaultTokenBAccount': json['vaultTokenBAccount'],
        'tokenAMint': json['tokenAMint'],
        'tokenBMint': json['tokenBMint'],
        'whirlpool': json['whirlpool'],
        'tokenVaultA': json['tokenVaultA'],
        'tokenVaultB': json['tokenVaultB'],
        'oracle': json['oracle'],
    };
}

export function OrcaWhirlpoolConfigToJSON(value?: OrcaWhirlpoolConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vault': value.vault,
        'vaultProtoConfig': value.vaultProtoConfig,
        'vaultTokenAAccount': value.vaultTokenAAccount,
        'vaultTokenBAccount': value.vaultTokenBAccount,
        'tokenAMint': value.tokenAMint,
        'tokenBMint': value.tokenBMint,
        'whirlpool': value.whirlpool,
        'tokenVaultA': value.tokenVaultA,
        'tokenVaultB': value.tokenVaultB,
        'oracle': value.oracle,
    };
}

