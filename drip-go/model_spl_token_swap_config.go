/*
Drip Backend

Drip backend service. All API's have a IP rate limit of 10 requests per second. 

API version: 1.0.0
Contact: mocha@dcaf.so
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package drip

import (
	"encoding/json"
)

// SplTokenSwapConfig struct for SplTokenSwapConfig
type SplTokenSwapConfig struct {
	Vault string `json:"vault"`
	VaultProtoConfig string `json:"vaultProtoConfig"`
	VaultTokenAAccount string `json:"vaultTokenAAccount"`
	VaultTokenBAccount string `json:"vaultTokenBAccount"`
	TokenAMint string `json:"tokenAMint"`
	TokenBMint string `json:"tokenBMint"`
	SwapTokenMint string `json:"swapTokenMint"`
	SwapTokenAAccount string `json:"swapTokenAAccount"`
	SwapTokenBAccount string `json:"swapTokenBAccount"`
	SwapFeeAccount string `json:"swapFeeAccount"`
	SwapAuthority string `json:"swapAuthority"`
	Swap string `json:"swap"`
}

// NewSplTokenSwapConfig instantiates a new SplTokenSwapConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplTokenSwapConfig(vault string, vaultProtoConfig string, vaultTokenAAccount string, vaultTokenBAccount string, tokenAMint string, tokenBMint string, swapTokenMint string, swapTokenAAccount string, swapTokenBAccount string, swapFeeAccount string, swapAuthority string, swap string) *SplTokenSwapConfig {
	this := SplTokenSwapConfig{}
	this.Vault = vault
	this.VaultProtoConfig = vaultProtoConfig
	this.VaultTokenAAccount = vaultTokenAAccount
	this.VaultTokenBAccount = vaultTokenBAccount
	this.TokenAMint = tokenAMint
	this.TokenBMint = tokenBMint
	this.SwapTokenMint = swapTokenMint
	this.SwapTokenAAccount = swapTokenAAccount
	this.SwapTokenBAccount = swapTokenBAccount
	this.SwapFeeAccount = swapFeeAccount
	this.SwapAuthority = swapAuthority
	this.Swap = swap
	return &this
}

// NewSplTokenSwapConfigWithDefaults instantiates a new SplTokenSwapConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplTokenSwapConfigWithDefaults() *SplTokenSwapConfig {
	this := SplTokenSwapConfig{}
	return &this
}

// GetVault returns the Vault field value
func (o *SplTokenSwapConfig) GetVault() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vault
}

// GetVaultOk returns a tuple with the Vault field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetVaultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vault, true
}

// SetVault sets field value
func (o *SplTokenSwapConfig) SetVault(v string) {
	o.Vault = v
}

// GetVaultProtoConfig returns the VaultProtoConfig field value
func (o *SplTokenSwapConfig) GetVaultProtoConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultProtoConfig
}

// GetVaultProtoConfigOk returns a tuple with the VaultProtoConfig field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetVaultProtoConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultProtoConfig, true
}

// SetVaultProtoConfig sets field value
func (o *SplTokenSwapConfig) SetVaultProtoConfig(v string) {
	o.VaultProtoConfig = v
}

// GetVaultTokenAAccount returns the VaultTokenAAccount field value
func (o *SplTokenSwapConfig) GetVaultTokenAAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultTokenAAccount
}

// GetVaultTokenAAccountOk returns a tuple with the VaultTokenAAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetVaultTokenAAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultTokenAAccount, true
}

// SetVaultTokenAAccount sets field value
func (o *SplTokenSwapConfig) SetVaultTokenAAccount(v string) {
	o.VaultTokenAAccount = v
}

// GetVaultTokenBAccount returns the VaultTokenBAccount field value
func (o *SplTokenSwapConfig) GetVaultTokenBAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultTokenBAccount
}

// GetVaultTokenBAccountOk returns a tuple with the VaultTokenBAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetVaultTokenBAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultTokenBAccount, true
}

// SetVaultTokenBAccount sets field value
func (o *SplTokenSwapConfig) SetVaultTokenBAccount(v string) {
	o.VaultTokenBAccount = v
}

// GetTokenAMint returns the TokenAMint field value
func (o *SplTokenSwapConfig) GetTokenAMint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenAMint
}

// GetTokenAMintOk returns a tuple with the TokenAMint field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetTokenAMintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenAMint, true
}

// SetTokenAMint sets field value
func (o *SplTokenSwapConfig) SetTokenAMint(v string) {
	o.TokenAMint = v
}

// GetTokenBMint returns the TokenBMint field value
func (o *SplTokenSwapConfig) GetTokenBMint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenBMint
}

// GetTokenBMintOk returns a tuple with the TokenBMint field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetTokenBMintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenBMint, true
}

// SetTokenBMint sets field value
func (o *SplTokenSwapConfig) SetTokenBMint(v string) {
	o.TokenBMint = v
}

// GetSwapTokenMint returns the SwapTokenMint field value
func (o *SplTokenSwapConfig) GetSwapTokenMint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapTokenMint
}

// GetSwapTokenMintOk returns a tuple with the SwapTokenMint field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetSwapTokenMintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapTokenMint, true
}

// SetSwapTokenMint sets field value
func (o *SplTokenSwapConfig) SetSwapTokenMint(v string) {
	o.SwapTokenMint = v
}

// GetSwapTokenAAccount returns the SwapTokenAAccount field value
func (o *SplTokenSwapConfig) GetSwapTokenAAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapTokenAAccount
}

// GetSwapTokenAAccountOk returns a tuple with the SwapTokenAAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetSwapTokenAAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapTokenAAccount, true
}

// SetSwapTokenAAccount sets field value
func (o *SplTokenSwapConfig) SetSwapTokenAAccount(v string) {
	o.SwapTokenAAccount = v
}

// GetSwapTokenBAccount returns the SwapTokenBAccount field value
func (o *SplTokenSwapConfig) GetSwapTokenBAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapTokenBAccount
}

// GetSwapTokenBAccountOk returns a tuple with the SwapTokenBAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetSwapTokenBAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapTokenBAccount, true
}

// SetSwapTokenBAccount sets field value
func (o *SplTokenSwapConfig) SetSwapTokenBAccount(v string) {
	o.SwapTokenBAccount = v
}

// GetSwapFeeAccount returns the SwapFeeAccount field value
func (o *SplTokenSwapConfig) GetSwapFeeAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapFeeAccount
}

// GetSwapFeeAccountOk returns a tuple with the SwapFeeAccount field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetSwapFeeAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapFeeAccount, true
}

// SetSwapFeeAccount sets field value
func (o *SplTokenSwapConfig) SetSwapFeeAccount(v string) {
	o.SwapFeeAccount = v
}

// GetSwapAuthority returns the SwapAuthority field value
func (o *SplTokenSwapConfig) GetSwapAuthority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwapAuthority
}

// GetSwapAuthorityOk returns a tuple with the SwapAuthority field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetSwapAuthorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwapAuthority, true
}

// SetSwapAuthority sets field value
func (o *SplTokenSwapConfig) SetSwapAuthority(v string) {
	o.SwapAuthority = v
}

// GetSwap returns the Swap field value
func (o *SplTokenSwapConfig) GetSwap() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Swap
}

// GetSwapOk returns a tuple with the Swap field value
// and a boolean to check if the value has been set.
func (o *SplTokenSwapConfig) GetSwapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Swap, true
}

// SetSwap sets field value
func (o *SplTokenSwapConfig) SetSwap(v string) {
	o.Swap = v
}

func (o SplTokenSwapConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vault"] = o.Vault
	}
	if true {
		toSerialize["vaultProtoConfig"] = o.VaultProtoConfig
	}
	if true {
		toSerialize["vaultTokenAAccount"] = o.VaultTokenAAccount
	}
	if true {
		toSerialize["vaultTokenBAccount"] = o.VaultTokenBAccount
	}
	if true {
		toSerialize["tokenAMint"] = o.TokenAMint
	}
	if true {
		toSerialize["tokenBMint"] = o.TokenBMint
	}
	if true {
		toSerialize["swapTokenMint"] = o.SwapTokenMint
	}
	if true {
		toSerialize["swapTokenAAccount"] = o.SwapTokenAAccount
	}
	if true {
		toSerialize["swapTokenBAccount"] = o.SwapTokenBAccount
	}
	if true {
		toSerialize["swapFeeAccount"] = o.SwapFeeAccount
	}
	if true {
		toSerialize["swapAuthority"] = o.SwapAuthority
	}
	if true {
		toSerialize["swap"] = o.Swap
	}
	return json.Marshal(toSerialize)
}

type NullableSplTokenSwapConfig struct {
	value *SplTokenSwapConfig
	isSet bool
}

func (v NullableSplTokenSwapConfig) Get() *SplTokenSwapConfig {
	return v.value
}

func (v *NullableSplTokenSwapConfig) Set(val *SplTokenSwapConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSplTokenSwapConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSplTokenSwapConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplTokenSwapConfig(val *SplTokenSwapConfig) *NullableSplTokenSwapConfig {
	return &NullableSplTokenSwapConfig{value: val, isSet: true}
}

func (v NullableSplTokenSwapConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplTokenSwapConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


