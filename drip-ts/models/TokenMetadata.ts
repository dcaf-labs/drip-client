/* tslint:disable */
/* eslint-disable */
/**
 * Drip Backend
 * Drip backend service. All API\'s have a IP rate limit of 10 requests per second. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mocha@dcaf.so
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TokenMetadataCollection } from './TokenMetadataCollection';
import {
    TokenMetadataCollectionFromJSON,
    TokenMetadataCollectionFromJSONTyped,
    TokenMetadataCollectionToJSON,
} from './TokenMetadataCollection';

/**
 * 
 * @export
 * @interface TokenMetadata
 */
export interface TokenMetadata {
    /**
     * 
     * @type {string}
     * @memberof TokenMetadata
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TokenMetadata
     */
    symbol: string;
    /**
     * 
     * @type {string}
     * @memberof TokenMetadata
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof TokenMetadata
     */
    image: string;
    /**
     * 
     * @type {string}
     * @memberof TokenMetadata
     */
    externalUrl: string;
    /**
     * 
     * @type {TokenMetadataCollection}
     * @memberof TokenMetadata
     */
    collection: TokenMetadataCollection;
}

/**
 * Check if a given object implements the TokenMetadata interface.
 */
export function instanceOfTokenMetadata(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "symbol" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "externalUrl" in value;
    isInstance = isInstance && "collection" in value;

    return isInstance;
}

export function TokenMetadataFromJSON(json: any): TokenMetadata {
    return TokenMetadataFromJSONTyped(json, false);
}

export function TokenMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'symbol': json['symbol'],
        'description': json['description'],
        'image': json['image'],
        'externalUrl': json['external_url'],
        'collection': TokenMetadataCollectionFromJSON(json['collection']),
    };
}

export function TokenMetadataToJSON(value?: TokenMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'symbol': value.symbol,
        'description': value.description,
        'image': value.image,
        'external_url': value.externalUrl,
        'collection': TokenMetadataCollectionToJSON(value.collection),
    };
}

